This is a package for easily selecting notes via consult. It is largely drawn
from this [[https://github.com/minad/consult/wiki/hrm-notes][wiki entry]] on the consult github page.

It can be used on its own or in tandem with org-roam (see the minor-mode in
=consult-notes-org-roam.el=. 

Consult-notes applies annotations in the minibuffer via [[https://github.com/minad/marginalia][marginalia]] and actions
on candidates via [[https://github.com/oantolin/embark][embark]].

NOTE: This is still in a fluctuating state, the package may change in
potentially breaking ways, so please update with care!

#+ATTR_HTML: :width 85%
[[file:screenshots/notes-screenshot.png]]

* Installation
#+begin_src emacs-lisp
(use-package consult-notes
  :straight (:type git :host github :repo "mclear-tools/consult-notes")
  :commands (consult-notes
             consult-notes-search-all
             consult-notes-org-roam-find-node
             consult-notes-org-roam-find-node-relation)
  :config
  (setq consult-notes-sources-data) ;; set notes dir(s), see below
  (consult-notes-org-roam-mode)) ;; set org-roam integration

#+end_src

* Usage

Set notes directories via =consult-notes-sources-data=. This is a list of a title,
key (for narrowing), and directory path. For example:

#+begin_src emacs-lisp
(setq consult-notes-sources-data
      '(("Zettel"          ?z "~/Dropbox/Work/projects/notebook/content-org/")
        ("Org"             ?o "~/Dropbox/org-files/")
        ("Lecture Notes"   ?l "~/Dropbox/Work/projects/notebook/content-org/lectures/")
        ("Reference Notes" ?r "~/Dropbox/Work/projects/notebook/content-org/ref-notes/")
        ("Org Refile"      ?R "~/Dropbox/Work/projects/notebook/org-refile/")))
#+end_src

To search all your notes with grep (or ripgrep if installed) you need to either
limit your searches to a single directory, or create a directory containing
aliases of all the files or directories that you have notes in that you'd like
to search. Consult will treat all the aliased files and dirs as if they were all
together in one dir and searches them quickly and easily. Set this via
=consult-notes-all-notes=. 

If you want to integrate consult-notes with org-roam be sure to call the
minor-mode integration via =(consult-notes-org-roam-mode)=. This provides some
useful functions and makes the org-roam display interface look like that of the
consult-notes interface. More functionality may be added in the future. 

* Embark support

If you use [[https://github.com/oantolin/embark][embark]] you can integrate consult-notes actions with embark like so: 

#+begin_src emacs-lisp
(defun consult-notes-open-dired (cand)
  "Open notes directory dired with point on file CAND."
  (interactive "fNote: ")
  ;; dired-jump is in dired-x.el but is moved to dired in Emacs 28
  (dired-jump nil cand))

(defun consult-notes-marked (cand)
  "Open a notes file CAND in Marked 2.
Marked 2 is a mac app that renders markdown."
  (interactive "fNote: ")
  (call-process-shell-command (format "open -a \"Marked 2\" \"%s\"" (expand-file-name cand))))

(defun consult-notes-grep (cand)
  "Run grep in directory of notes file CAND."
  (interactive "fNote: ")
  (consult-grep (file-name-directory cand)))

(embark-define-keymap consult-notes-map
                      "Keymap for Embark notes actions."
                      :parent embark-file-map
                      ("d" consult-notes-dired)
                      ("g" consult-notes-grep)
                      ;; ("h" consult-notes-org-headline)
                      ("m" consult-notes-marked))

(add-to-list 'embark-keymap-alist `(,consult-notes-category . consult-notes-map))

;; make embark-export use dired for notes
(setf (alist-get consult-notes-category embark-exporters-alist) #'embark-export-dired)
#+end_src
